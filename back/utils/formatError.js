// üìå R√¥le : formatage de l'erreur : formater l‚Äôobjet d‚Äôerreur selon l‚Äôenvironnement (dev ou production)
// 1. withErrorHandler() attrape l‚Äôerreur d‚Äôun contr√¥leur
// 2.Envoie l‚Äôerreur √† handleErrors()
// 3.handleErrors() utilise formatError() pour formater la r√©ponse

const errorInDev = process.env.NODE_ENV !== "production";

const formatError = (erreur) => {
  if (errorInDev) {
     // En d√©veloppement, on montre tous les d√©tails
    return {
      message: erreur.message,
      stack: erreur.stack,
      name: erreur.name
    };
  } else {
     // En production, on cache les d√©tails sensibles
    return {
      message: "Une erreur inatendue s'est produite"
    }
  }  
};

export default formatError;
