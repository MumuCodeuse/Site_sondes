// üìå R√¥le : enveloppe de s√©curit√© : encapsuler les fonctions de contr√¥leur avec une gestion automatique des erreurs
// Handle : g√©rer
// Cette fonction enveloppe chaque contr√¥leur, √©vite de r√©peter try catch et si erreur, l'envoie √† handleError
// 1. withErrorHandler() attrape l‚Äôerreur d‚Äôun contr√¥leur
// 2.Envoie l‚Äôerreur √† handleErrors()
// 3.handleErrors() utilise formatError() pour formater la r√©ponse

import handleErrors from "./errorHandler.js";

const withErrorHandler = (controllerFn) => {
  return async (req, res, next) => {
    try {
       // Ex√©cution normale du contr√¥leur (ex : getUser, createPost‚Ä¶)
      await controllerFn(req, res, next)
    } catch (erreur) {
      // Si une erreur survient, on la transmet au gestionnaire d‚Äôerreurs
      handleErrors(res, erreur);
    }
  };
};

export default withErrorHandler;